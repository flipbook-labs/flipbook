name: Release

on:
  pull_request:
  release:
    types: [published]
  push:
    branches:
      - main

jobs:
  publish-github-release:
    runs-on: macos-latest
    permissions:
      contents: write
    if: ${{ github.event.release }}
    steps:
      - uses: actions/checkout@v4

      - uses: CompeyDev/setup-rokit@v0.1.2
        with:
          version: v1.2.0

      - name: Get model file name
        run: |
          name=$(jq -r .name default.project.json)
          echo "MODEL_FILE=$name.rbxm" >> $GITHUB_ENV

      - name: Install dependencies
        run: lute scripts/install.luau

      - name: Build
        run: lute scripts/build.luau --channel prod --output ${{ env.MODEL_FILE }}

      - uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.MODEL_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-plugin:
    runs-on: macos-latest
    timeout-minutes: 5
    concurrency: production
    environment:
      name: roblox-creator-store
      url: https://create.roblox.com/store/asset/8517129161
    env:
      LOG_LEVEL: debug
    if: github.event.release
    steps:
      - uses: actions/checkout@v4

      - uses: CompeyDev/setup-rokit@v0.1.2
        with:
          version: v1.1.1

      - name: Install dependencies
        run: lute scripts/install.luau

      - name: Publish release to Creator Store
        run: lune run publish-plugin --channel prod --apiKey ${{ secrets.ROBLOX_API_KEY }}

  publish-nightly-plugin:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    concurrency: nightly
    environment:
      name: roblox-creator-store-dev
      url: https://create.roblox.com/store/asset/88523969718241
    env:
      LOG_LEVEL: debug
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - uses: CompeyDev/setup-rokit@v0.1.2
        with:
          version: v1.2.0

      - name: Install dependencies
        run: lute scripts/install.luau

      - name: Publish nightly build to Creator Store
        run: lune run publish-plugin --channel dev --apiKey ${{ secrets.ROBLOX_API_KEY }}
